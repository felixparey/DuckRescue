<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>23</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>22</string>
					<key>Timestamp</key>
					<string>731262105.737591</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DuckRescue/AppState/AppState+Phases.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        //TODO: handle logic of disabling everything besides Game Over Window
</string>
				<key>leading</key>
				<string>    
    public func gameOver(){
</string>
				<key>trailing</key>
				<string>        phase.transition(to: .hitSomething)
        
    }
</string>
			</dict>
			<key>title</key>
			<string>handle logic of disabling everything besides Game Over Window</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>23</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>22</string>
					<key>Timestamp</key>
					<string>731257605.924592</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DuckRescue/Views/GameOverView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                appState.phase.transition(to: .waitingToStart)
</string>
				<key>leading</key>
				<string>            
            Button{
</string>
				<key>trailing</key>
				<string>            } label: {
                    Text("Try Again")
                        .font(.title)
</string>
			</dict>
			<key>title</key>
			<string>Currently just changes the Phase but nothing happens</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>52</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>51</string>
					<key>Timestamp</key>
					<string>731261916.3934079</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DuckRescue/ImmersiveSpaces/ImmersiveView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            if oldValue == .levelRunning &amp;&amp; newValue == .hitSomething{
</string>
				<key>leading</key>
				<string>        }
        .onChange(of: appState.phase) { oldValue, newValue in
</string>
				<key>trailing</key>
				<string>                switch appState.duckCollisionPartner{
                case .Floor, .Ceiling, .Geysir, .Rat: 
                    if appState.windowCount == 0{
</string>
			</dict>
			<key>title</key>
			<string>Triggers the window spawning too often</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>25</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>24</string>
					<key>Timestamp</key>
					<string>731209604.371749</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DuckRescue/AppState/AppState+CollisionLogic.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        
</string>
				<key>leading</key>
				<string>        
    func setDuckCollisonPartner(_ entityA: Entity, _ entityB: Entity){
</string>
				<key>trailing</key>
				<string>        if entityA.name == "duck"{
            let array = ["Floor1", "Floor2", "Floor3"]
            switch entityB.name{
</string>
			</dict>
			<key>title</key>
			<string>Change to the actual names of the entities</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
