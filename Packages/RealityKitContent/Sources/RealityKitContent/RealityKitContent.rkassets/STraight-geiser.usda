#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = ""
    metersPerUnit = 1
    upAxis = "Y"
)

def "Striagthhh" (
    active = true
    references = @Striagthhh.usdz@
)
{
    reorder nameChildren = ["Materials", "Geom", "geiser"]
    float3 xformOp:scale = (1, 1, 1)
    float3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    over "Geom"
    {
        reorder nameChildren = ["PipeStraight", "Plane", "Plane_001", "geiser", "geiser"]
        def Xform "geiser" (
            references = </Striagthhh/Geom/geiser/ParticleEmitter>
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.55524564, -0.81514, -0.0029538274)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "VFXEmitter"
            {
                token info:id = "RealityKit.VFXEmitter"

                def RealityKitStruct "currentState"
                {
                    token birthDirection = "Normal"
                    token birthLocation = "Surface"
                    int64 burstCount = 6000
                    float3 emissionDirection = (0, 1, 0)
                    double emissionDuration = 2
                    double emissionDurationVariation = 0.1
                    token emitterShape = "Point"
                    double idleDuration = 3
                    double idleDurationVariation = 0.3
                    bool isLocal = 0
                    bool isSpawningEnabled = 1
                    bool loops = 1
                    float particleSpeed = 1
                    float particleSpeedVariation = 0.4
                    float3 shapeSize = (1, 1, 1)
                    bool spawnInheritParentColor = 0
                    token spawnOccasion = "OnBirth"
                    float spawnSpreadFactor = 0
                    float spawnSpreadFactorVariation = 0
                    float spawnVelocityFactor = 0.5
                    double warmupDuration = 0

                    def RealityKitStruct "mainEmitter"
                    {
                        float3 acceleration = (0, -11, 0)
                        token billboardMode = "Billboard"
                        float birthRate = 29000
                        float birthRateVariation = 1000
                        token blendMode = "Additive"
                        float colorEvolutionPower = 0.2
                        float dampingFactor = 0
                        float4 endColorA = (0.9986965, 0.9674097, 0, 1)
                        float4 endColorB = (1, 1, 1, 1)
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 0
                        float noiseScale = 1
                        float noiseStrength = 0
                        token opacityOverLife = "GradualFadeInOut"
                        float particleAngle = 0
                        float particleAngleVariation = 0
                        float particleAngularVelocity = 0
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @ParticleEmitterPresetTextures/flare.exr@
                        double particleLifeSpan = 0.001
                        double particleLifeSpanVariation = 0.22
                        float particleMass = 1.8
                        float particleMassVariation = 0.1
                        float particleSize = 0.04
                        float particleSizeVariation = 0.003
                        float3 radialGravityCenter = (1, 1, 0)
                        float radialGravityStrength = 0
                        float sizeMultiplierAtEndOfLifespan = 0.06
                        float sizeMultiplierAtEndOfLifespanPower = 0.001
                        token sortOrder = "IncreasingDepth"
                        float spreadingAngle = 0.3
                        float4 startColorA = (0.018615872, 0.038920388, 0.01153544, 1)
                        float4 startColorB = (1, 1, 1, 1)
                        float stretchFactor = 12
                        bool useEndColor = 0
                        bool useEndColorRange = 1
                        bool useStartColorRange = 0
                        float3 vortexDirection = (0, 1, 0)
                        float vortexStrength = 0
                    }

                    def RealityKitStruct "spawnedEmitter"
                    {
                        float3 acceleration = (0, -2, 0)
                        token billboardMode = "Billboard"
                        float birthRate = 400
                        float birthRateVariation = 0
                        token blendMode = "Additive"
                        float colorEvolutionPower = 1
                        float dampingFactor = 0
                        float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                        float4 endColorB = (0.11386989, 0.0064959256, 0.10626237, 1)
                        bool isLightingEnabled = 0
                        float noiseAnimationSpeed = 0
                        float noiseScale = 0.4
                        float noiseStrength = 3
                        token opacityOverLife = "Constant"
                        float particleAngle = 0
                        float particleAngleVariation = 0
                        float particleAngularVelocity = 0
                        float particleAngularVelocityVariation = 0
                        asset particleImage = @ParticleEmitterPresetTextures/flare.exr@
                        double particleLifeSpan = 0.25
                        double particleLifeSpanVariation = 0
                        float particleMass = 1
                        float particleMassVariation = 0
                        float particleSize = 0.001
                        float particleSizeVariation = 0.001
                        float3 radialGravityCenter = (0, 0, 0)
                        float radialGravityStrength = 0
                        float sizeMultiplierAtEndOfLifespan = 1.3
                        float sizeMultiplierAtEndOfLifespanPower = 0
                        token sortOrder = "IncreasingID"
                        float spreadingAngle = 0
                        float4 startColorA = (1, 1, 1, 1)
                        float4 startColorB = (1, 1, 1, 1)
                        float stretchFactor = 0
                        bool useEndColor = 0
                        bool useEndColorRange = 0
                        bool useStartColorRange = 0
                        float3 vortexDirection = (0, 1, 0)
                        float vortexStrength = 0
                    }
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0, 0, 0)
                    float radius = 0.03
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                bool lockRotationX = 1
                bool lockRotationY = 1
                bool lockRotationZ = 1
                bool lockTranslationX = 1
                bool lockTranslationY = 1
                bool lockTranslationZ = 1
                token motionType = "Kinematic"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                }
            }
        }
    }
}

