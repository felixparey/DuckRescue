#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["duck", "Cube"]
    def "Cube" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 1.5707963, 0)
        }
        references = @PipePart1.usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, 0, 0.70710677, 0)
        float3 xformOp:scale = (0.05, 0.05, 0.05)
        float3 xformOp:translate = (-0.05, 0.05, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Geom"
        {
            over "Plane_001"
            {
                def Mesh "Plane_001" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                    references = </Root/Cube/Geom/Plane_001>
                )
                {
                    uniform bool doubleSided = 0
                    int[] faceVertexCounts = [3, 3]
                    int[] faceVertexIndices = [0, 1, 3, 0, 3, 2]
                    rel material:binding = </Root/Cube/Materials/defaultMaterial>
                    point3f[] points = [(-1, 0, 1), (1, 0, 1), (-1, 0, -1), (1, 0, -1)]
                    normal3f[] primvars:normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                        interpolation = "vertex"
                    )
                    texCoord2f[] primvars:st = [(0, 0), (1, 0), (0, 1), (1, 1)] (
                        interpolation = "vertex"
                    )
                    uniform token subdivisionScheme = "none"
                    quatf xformOp:orient = (1, 0, -3.876262e-8, 0)
                    float3 xformOp:scale = (0.9999998, 0.9999999, 0.9999998)
                    double3 xformOp:translate = (0, 1.1920928955078125e-7, 3.725290298461914e-9)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                }

                def Mesh "Plane_2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                    references = </Root/Cube/Geom/Plane_001>
                )
                {
                    uniform bool doubleSided = 0
                    int[] faceVertexCounts = [3, 3]
                    int[] faceVertexIndices = [0, 1, 3, 0, 3, 2]
                    rel material:binding = </Root/Cube/Materials/defaultMaterial>
                    point3f[] points = [(-1, 0, 1), (1, 0, 1), (-1, 0, -1), (1, 0, -1)]
                    normal3f[] primvars:normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                        interpolation = "vertex"
                    )
                    texCoord2f[] primvars:st = [(0, 0), (1, 0), (0, 1), (1, 1)] (
                        interpolation = "vertex"
                    )
                    uniform token subdivisionScheme = "none"
                    quatf xformOp:orient = (1, 0, -3.876262e-8, 0)
                    float3 xformOp:scale = (0.9999998, 0.9999999, 0.9999998)
                    double3 xformOp:translate = (0, 1.1920928955078125e-7, 3.725290298461914e-9)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                }

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (2, 1.1920929e-7, 2)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (0, 5.9604645e-8, 0)
                        }
                    }
                }

                def RealityKitComponent "RigidBody"
                {
                    bool gravityEnabled = 0
                    uniform token info:id = "RealityKit.RigidBody"
                    bool lockRotationX = 1
                    bool lockRotationY = 1
                    bool lockRotationZ = 1
                    bool lockTranslationX = 1
                    bool lockTranslationY = 1
                    bool lockTranslationZ = 1

                    def RealityKitStruct "massFrame"
                    {
                        float m_mass = 1000000

                        def RealityKitStruct "m_pose"
                        {
                        }
                    }

                    def RealityKitStruct "material"
                    {
                    }
                }
            }

            over "Plane"
            {
                def RealityKitComponent "RigidBody"
                {
                    bool gravityEnabled = 0
                    uniform token info:id = "RealityKit.RigidBody"
                    bool lockRotationX = 1
                    bool lockRotationY = 1
                    bool lockRotationZ = 1
                    bool lockTranslationX = 1
                    bool lockTranslationY = 1
                    bool lockTranslationZ = 1
                    token motionType = "Dynamic"

                    def RealityKitStruct "massFrame"
                    {
                        float m_mass = 1000000

                        def RealityKitStruct "m_pose"
                        {
                        }
                    }

                    def RealityKitStruct "material"
                    {
                    }
                }

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Trigger"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (2, 0, 2)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                        }
                    }
                }
            }
        }
    }

    def "duck" (
        active = true
        customData = {
            float3 rotationEulerHint = (3.1415927, 0, 0)
        }
        references = @duck1.usdz@
    )
    {
        quatf xformOp:orient = (-4.371139e-8, 1, 0, 0)
        float3 xformOp:scale = (0.011, 0.011, 0.011)
        float3 xformOp:translate = (-0.19096825, 0.04486052, 3.934838e-8)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            bool lockRotationX = 1
            bool lockRotationY = 1
            bool lockRotationZ = 1
            bool lockTranslationX = 0
            bool lockTranslationY = 0
            bool lockTranslationZ = 1

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "InputTarget"
        {
            bool allowsDirectInput = 0
            bool allowsIndirectInput = 1
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (4.377198, 5.6825314, 4.617799)
                float radius = 2.2
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.43509972, -0.2354523, 0.24603367)
                }
            }
        }
    }
}

